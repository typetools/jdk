jobs:
- job: build_jdk
  pool:
    vmImage: 'ubuntu-16.04'
  container: mdernst/cf-ubuntu-jdk11-plus-buildjdk:latest
  steps:
  - bash: |
      whoami
      git config --get remote.origin.url
      pwd
      ls -al
      env | sort
    displayName: show environment
  - bash: pwd && ls && bash ./configure --with-jtreg=/jtreg --disable-warnings-as-errors
    displayName: configure
  - bash: make jdk
    timeoutInMinutes: 90
    displayName: make jdk
  ## This works only after `make images`
  # - bash: build/*/images/jdk/bin/java -version
  #   displayName: version
  ## Don't run tests, which pass only with old version of tools (compilers, etc.).
  # - bash: make -C /jdk run-test-tier1
  #   displayName: make run-test-tier1
- job: build_jdk11u
  pool:
    vmImage: 'ubuntu-16.04'
  container: mdernst/cf-ubuntu-jdk11-plus-buildjdk:latest
  timeoutInMinutes: 0
  steps:
  - bash: |
      whoami
      git config --get remote.origin.url
      pwd
      ls -al
      env | sort
    displayName: show environment
  - bash: |
      set -ex
      if [ -d /tmp/plume-scripts ]; \
        then git -C /tmp/plume-scripts pull > /dev/null 2>&1 ; \
        else git -C /tmp clone --depth 1 -q https://github.com/plume-lib/plume-scripts.git ; \
      fi
    displayName: plume-scripts
  # This creates ../jdk11u .
  # If the depth is too small, the merge will fail.
  - bash: |
      set -ex
      /tmp/plume-scripts/git-clone-related typetools jdk11u ../jdk11u -q --depth 99
    displayName: clone
  - bash: |
      set -ex
      git config --global user.email "you@example.com"
      git config --global user.name "Your Name"
      eval `/tmp/plume-scripts/ci-info typetools`
      cd ../jdk11u && git pull https://github.com/${CI_ORGANIZATION}/jdk ${CI_BRANCH} || (echo "Merge failed; see 'Pull request merge conflicts' at https://github.com/typetools/jdk/blob/master/README" && false)
    displayName: git merge
  - bash: cd ../jdk11u && export JT_HOME=/jtreg && bash ./configure --with-jtreg --disable-warnings-as-errors
    displayName: configure
  - bash: cd ../jdk11u && make jdk
    displayName: make jdk
  ## This works only after `make images`
  # - bash: cd ../jdk11u && build/*/images/jdk/bin/java -version
  #   displayName: version
  # - bash: make -C /jdk11u run-test-tier1
  #   timeoutInMinutes: 0
  #   displayName: make run-test-tier1
  # - bash: make -C /jdk11u JTREG="JOBS=1;TIMEOUT=8" :test/jdk:tier1
  - bash: cd ../jdk11u && make run-test TEST="jtreg:test/jdk:tier1" JTREG="TIMEOUT=8"
    timeoutInMinutes: 0
    displayName: make run-test
